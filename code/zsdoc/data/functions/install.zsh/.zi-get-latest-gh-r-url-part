emulate -LR zsh
setopt extendedglob warncreateglobal typesetsilent noshortloops

REPLY=
local user=$1 plugin=$2 urlpart=$3

if [[ -z $urlpart ]] {
  local url=https://github.com/$user/$plugin/releases/$ICE[ver]
} else {
  local url=https://$urlpart
}

local -A matchstr
matchstr=(
  i386    "((386|686|linux32|x86*(#e))~*x86_64*)"
  i686    "((386|686|linux32|x86*(#e))~*x86_64*)"
  x86_64  "(x86_64|amd64|intel|linux64)"
  amd64   "(x86_64|amd64|intel|linux64)"
  aarch64 "aarch64"
  aarch64-2 "arm"
  linux   "(linux|linux-gnu)"
  darwin  "(darwin|mac|macos|osx|os-x)"
  cygwin  "(windows|cygwin|[-_]win|win64|win32)"
  windows "(windows|cygwin|[-_]win|win64|win32)"
  msys "(windows|msys|cygwin|[-_]win|win64|win32)"
  armv7l  "(arm7|armv7)"
  armv7l-2 "arm7"
  armv6l  "(arm6|armv6)"
  armv6l-2 "arm"
  armv5l  "(arm5|armv5)"
  armv5l-2 "arm"
)

local -a list init_list

init_list=( ${(@f)"$( { .zi-download-file-stdout $url || .zi-download-file-stdout $url 1; } 2>/dev/null | \
  command grep -o 'href=./'$user'/'$plugin'/releases/download/[^"]\+')"} )
init_list=( ${init_list[@]#href=?} )

local -a list2 bpicks
bpicks=( ${(s.;.)ICE[bpick]} )
[[ -z $bpicks ]] && bpicks=( "" )
local bpick

reply=()
for bpick ( "${bpicks[@]}" ) {
  list=( $init_list )

  if [[ -n $bpick ]] {
    list=( ${(M)list[@]:#(#i)*/$~bpick} )
  }

  if (( $#list > 1 )) {
    list2=( ${(M)list[@]:#(#i)*${~matchstr[$MACHTYPE]:-${MACHTYPE#(#i)(i|amd)}}*} )
    (( $#list2 > 0 )) && list=( ${list2[@]} )
  }

  if (( ${#list} > 1 && ${#matchstr[${MACHTYPE}-2]} )) {
    list2=( ${(M)list[@]:#(#i)*${~matchstr[${MACHTYPE}-2]:-${MACHTYPE#(#i)(i|amd)}}*} )
    (( $#list2 > 0 )) && list=( ${list2[@]} )
  }

  if (( $#list > 1 )) {
    list2=( ${(M)list[@]:#(#i)*${~matchstr[$CPUTYPE]:-${CPUTYPE#(#i)(i|amd)}}*} )
    (( $#list2 > 0 )) && list=( ${list2[@]} )
  }

  if (( $#list > 1 )) {
    list2=( ${(M)list[@]:#(#i)*${~matchstr[${${OSTYPE%(#i)-(gnu|musl)}%%(-|)[0-9.]##}]:-${${OSTYPE%(#i)-(gnu|musl)}%%(-|)[0-9.]##}}*} )
    (( $#list2 > 0 )) && list=( ${list2[@]} )
  }

  if (( $#list > 1 )) {
    list2=( ${list[@]:#(#i)*.(sha[[:digit:]]#|asc)} )
    (( $#list2 > 0 )) && list=( ${list2[@]} )
  }

  if (( $#list > 1 && $+commands[dpkg-deb] )) {
    list2=( ${list[@]:#*.deb} )
    (( $#list2 > 0 )) && list=( ${list2[@]} )
  }

  if (( $#list > 1 && $+commands[rpm] )) {
    list2=( ${list[@]:#*.rpm} )
    (( $#list2 > 0 )) && list=( ${list2[@]} )
  }

  if (( !$#list )) {
    +zi-message -n "{error}Didn't find correct Github" "release-file to download"
    if [[ -n $bpick ]] {
      +zi-message -n ", try adapting {obj}bpick{error}-ICE" "(the current bpick is{error}: {file}${bpick}{error})."
    } else {
      +zi-message -n .
    }
    +zi-message '{rst}'
    return 1
  }

  reply+=( $list[1] )
}
[[ -n $reply ]]
