emulate -LR zsh
setopt extendedglob warncreateglobal typesetsilent noshortloops rcquotes

local -a tmp opts
local url=$1
integer correct=0
[[ -o ksharrays ]] && correct=1
opts=( -u )
local -A ice_opts
ice_opts=( "${(kv)OPTS[@]}" )
local -A OPTS
OPTS=( "${(kv)ice_opts[@]}" )

ZI[annex-multi-flag:pull-active]=0 ZI[-r/--reset-opt-hook-has-been-run]=0
url=${${url#${url%%[! $'\t']*}}%/}
ICE[teleid]=${ICE[teleid]:-$url}
[[ ${ICE[as]} = null || ${+ICE[null]} -eq 1 || ${+ICE[binary]} -eq 1 ]] && ICE[pick]=${ICE[pick]:-/dev/null}

local local_dir dirname filename save_url=$url id_as=${ICE[id-as]:-$url}

.zi-pack-ice "$id_as" ""
eval "url=\"$url\""
tmp=( "${(Q@)${(z@)ZI_SICE[$id_as]}}" )
if (( ${#tmp} > 1 && ${#tmp} % 2 == 0 )) {
  ICE=( "${(kv)ICE[@]}" "${tmp[@]}" )
} elif [[ -n ${ZI_SICE[$id_as]} ]] {
  +zi-message "{error}WARNING:{msg2} Inconsistency #3" \
    "occurred, please report the string: \`{obj}${ZI_SICE[$id_as]}{msg2}' to the" \
    "GitHub issues page: {obj}https://github.com/z-shell/zi/issues/{msg2}.{rst}"
}
id_as=${ICE[id-as]:-$id_as}
if (( ${+ICE[svn]} )) {
  [[ $url = *(${(~kj.|.)${(Mk)ZI_1MAP:#OMZ*}}|robbyrussell*oh-my-zsh|ohmyzsh/ohmyzsh)* ]] && local ZSH=${ZI[SNIPPETS_DIR]}
  url=${url/(#s)(#m)(${(~kj.|.)ZI_1MAP})/$ZI_1MAP[$MATCH]}
} else {
  url=${url/(#s)(#m)(${(~kj.|.)ZI_2MAP})/$ZI_2MAP[$MATCH]}
  if [[ $save_url == (${(~kj.|.)${(Mk)ZI_1MAP:#OMZ*}})* ]] {
    if [[ $url != *.zsh(|-theme) && $url != */_[^/]## ]] {
      if [[ $save_url == OMZT::* ]] {
        url+=.zsh-theme
      } else {
        url+=/${${url#*::}:t}.plugin.zsh
      }
    }
  } elif [[ $save_url = (${(~kj.|.)${(kM)ZI_1MAP:#PZT*}})* ]] {
    if [[ $url != *.zsh ]] {
      url+=/init.zsh
    }
  }
}

if { ! .zi-get-object-path snippet "$id_as" } {
  +zi-message "{msg2}Error: the snippet \`{obj}$id_as{msg2}'" "doesn't exist, aborting the update.{rst}"
    return 1
}
filename=$reply[-2] dirname=$reply[-2] local_dir=$reply[-3]

local -a arr
local key
reply=(
  ${(on)ZI_EXTS2[(I)zi hook:preinit-pre <->]}
  ${(on)ZI_EXTS[(I)z-annex hook:preinit-<-> <->]}
  ${(on)ZI_EXTS2[(I)zi hook:preinit-post <->]}
)
for key in "${reply[@]}"; do
  arr=( "${(Q)${(z@)ZI_EXTS[$key]:-$ZI_EXTS2[$key]}[@]}" )
  "${arr[5]}" snippet "$save_url" "$id_as" "$local_dir/$dirname" ${${key##(zi|z-annex) hook:}%% <->} update || return $(( 10 - $? ))
done
[[ $url = *github.com* && $url != */raw/* ]] && url=${url/\/(blob|tree)\///raw/}
.zi-download-snippet "$save_url" "$url" "$id_as" "$local_dir" "$dirname" "$filename" "-u"

return $?
