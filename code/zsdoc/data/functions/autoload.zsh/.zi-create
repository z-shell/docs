  emulate -LR zsh
  setopt localoptions extendedglob warncreateglobal typesetsilent noshortloops rcquotes

  .zi-any-to-user-plugin "$1" "$2"
  local user="${reply[-2]}" plugin="${reply[-1]}"
  if (( ${+commands[curl]} == 0 || ${+commands[git]} == 0 )); then
    builtin print "${ZI[col-error]}curl and git are needed${ZI[col-rst]}"
    return 1
  fi
  local isorg
  vared -cp 'Create under an organization? (y/n): ' isorg
  if [[ $isorg = (y|yes) ]]; then
    local org="$user"
    vared -cp "Github organization name: " org
  fi
  local compcontext="user:User Name:(\"$USER\" \"$user\")"
  vared -cp "Github user name or just \"_local\" (or leave blank, for an userless plugin): " user
  unset compcontext
  vared -cp 'Plugin name: ' plugin
  if [[ "$plugin" = "_unknown" ]]; then
    builtin print "${ZI[col-error]}No plugin name entered${ZI[col-rst]}"
    return 1
  fi
  plugin="${plugin//[^a-zA-Z0-9_]##/-}"
  .zi-any-colorify-as-uspl2 "${${${(M)isorg:#(y|yes)}:+$org}:-$user}" "$plugin"
  local uspl2col="$REPLY"
  builtin print "Plugin is $uspl2col"

  if .zi-exists-physically "${${${(M)isorg:#(y|yes)}:+$org}:-$user}" "$plugin"; then
    builtin print "${ZI[col-error]}Repository${ZI[col-rst]} $uspl2col ${ZI[col-error]}already exists locally${ZI[col-rst]}"
    return 1
  fi

  builtin cd -q "${ZI[PLUGINS_DIR]}"

  if [[ "$user" != "_local" && -n "$user" ]]; then
    builtin print "${ZI[col-info]}Creating Github repository${ZI[col-rst]}"
    if [[ $isorg = (y|yes) ]]; then
      curl --silent -u "$user" https://api.github.com/orgs/$org/repos -d '{"name":"'"$plugin"'"}' >/dev/null
    else
      curl --silent -u "$user" https://api.github.com/user/repos -d '{"name":"'"$plugin"'"}' >/dev/null
    fi
    command git clone "https://github.com/${${${(M)isorg:#(y|yes)}:+$org}:-$user}/${plugin}.git" "${${${(M)isorg:#(y|yes)}:+$org}:-$user}---${plugin//\//---}" || {
      builtin print "${ZI[col-error]}Creation of remote repository $uspl2col ${ZI[col-error]}failed${ZI[col-rst]}"
      builtin print "${ZI[col-error]}Bad credentials?${ZI[col-rst]}"
      return 1
    }
    builtin cd -q "${${${(M)isorg:#(y|yes)}:+$org}:-$user}---${plugin//\//---}"
    command git config credential.https://github.com.username "${user}"
  else
    builtin print "${ZI[col-info]}Creating local git repository${${user:+.}:-, ${ZI[col-pname]}free-style, without the \"_local/\" part${ZI[col-info]}.}${ZI[col-rst]}"
    command mkdir "${user:+${user}---}${plugin//\//---}"
    builtin cd -q "${user:+${user}---}${plugin//\//---}"
    command git init || {
      builtin print "Git repository initialization failed, aborting"
      return 1
    }
  fi
  local user_name="$(command git config user.name 2>/dev/null)"
  local year="${$(command date "+%Y"):-2020}"

  command cat >| "${plugin:t}.plugin.zsh" <<EOF

0=\${\${ZERO:-\${0:#\$ZSH_ARGZERO}}:-\${(%):-%N}}
0=\${\${(M)0:#/*}:-\$PWD/\$0}

if [[ \${zsh_loaded_plugins[-1]} != */${plugin:t} && -z \${fpath[(r)\${0:h}]} ]] {
  fpath+=( "\${0:h}" )
}
typeset -gA Plugins
Plugins[${${(U)plugin:t}//-/_}_DIR]="\${0:h}"

autoload -Uz example-script
EOF

  command cat >>| .git/config <<EOF

[diff "zsh"]
  xfuncname = "^((function[[:blank:]]+[^[:blank:]]+[[:blank:]]*(\\\\(\\\\)|))|([^[:blank:]]+[[:blank:]]*\\\\(\\\\)))[[:blank:]]*(\\\\{|)[[:blank:]]*$"
[diff "markdown"]
  xfuncname = "^#+[[:blank:]].*$"
EOF

  builtin print -r -- "*.zsh  diff=zsh" >| .gitattributes
  builtin print -r -- "*.md   diff=markdown" >| .gitattributes
  builtin print -r -- "# $plugin" >| "README.md"
  command cp -vf "${ZI[BIN_DIR]}/LICENSE" LICENSE
  command cp -vf "${ZI[BIN_DIR]}/lib/templates/zsh.gitignore" .gitignore
  command cp -vf "${ZI[BIN_DIR]}/lib/templates/example-script" .

  command sed -i -e "s/MY_PLUGIN_DIR/${${(U)plugin:t}//-/_}_DIR/g" example-script
  command sed -i -e "s/USER_NAME/$user_name/g" example-script
  command sed -i -e "s/YEAR/$year/g" example-script

  if [[ "$user" != "_local" && -n "$user" ]]; then
    builtin print "Remote repository $uspl2col set up as origin."
    builtin print "You're in plugin's local folder, the files aren't added to git."
    builtin print "Your next step after commiting will be:"
    builtin print "git push -u origin master (or \`â€¦ -u origin main')"
  else
    builtin print "Created local $uspl2col plugin."
    builtin print "You're in plugin's repository folder, the files aren't added to git."
  fi
