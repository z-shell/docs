emulate -LR zsh
setopt extendedglob typesetsilent warncreateglobal
[[ $1 = -q ]] && +zi-message "{info2}Updating »»» ❮ ZI ❯ {…}{rst}"
local nl=$'\n' escape=$'\x1b['
local -a lines
(   builtin cd -q "$ZI[BIN_DIR]" && command git checkout main &>/dev/null && command git checkout master &>/dev/null && command git fetch --quiet && \
lines=( ${(f)"$(command git log --color --date=short --pretty=format:'%Cgreen%cd %h %Creset%s %Cred%d%Creset || %b' ..FETCH_HEAD)"} )
if (( ${#lines} > 0 )); then
  lines=( "${(S)lines[@]//\(([,[:blank:]]#(origin|HEAD|master|main)[^a-zA-Z]##(HEAD|origin|master|main)[,[:blank:]]#)#\)/}" )
  lines=( "${lines[@]/ \|\|[[:blank:]]#(#e)/}" )
  lines=( "${lines[@]/(#b)[[:space:]]#\|\|[[:space:]]#(*)(#e)/|| ${match[1]}}" )
  lines=( "${lines[@]/(#b)$escape([0-9]##)m[[:space:]]##${escape}m/$escape${match[1]}m${escape}m}" )
  lines=( "${lines[@]/(#b)[[:blank:]]#\|\|(*)(#e)/| ${${match[1]//$nl/ }[(w)1,(w)10]}}" )
  builtin print -rl -- "${lines[@]}" | .zi-pager
  builtin print
fi
if [[ $1 != -q ]] {
  command git pull --no-stat --ff-only origin main
} else {
  command git pull --no-stat --quiet --ff-only origin main
}
)
if [[ $1 != -q ]] {
  +zi-message "Compiling »»» ❮ ZI ❯ {…}"
}
command rm -f ${ZI[BIN_DIR]}/*.zwc(DN)
command rm -f ${ZI[BIN_DIR]}/lib/zsh/*.zwc(DN)
zcompile -U ${ZI[BIN_DIR]}/zi.zsh
zcompile -U ${ZI[BIN_DIR]}/lib/zsh/side.zsh
zcompile -U ${ZI[BIN_DIR]}/lib/zsh/install.zsh
zcompile -U ${ZI[BIN_DIR]}/lib/zsh/autoload.zsh
zcompile -U ${ZI[BIN_DIR]}/lib/zsh/additional.zsh
zcompile -U ${ZI[BIN_DIR]}/lib/zsh/git-process-output.zsh
[[ $1 != -q ]] && +zi-message "Reloading »»» ❮ ZI ❯ for the current session{…}"
source ${ZI[BIN_DIR]}/zi.zsh
source ${ZI[BIN_DIR]}/lib/zsh/side.zsh
source ${ZI[BIN_DIR]}/lib/zsh/install.zsh
source ${ZI[BIN_DIR]}/lib/zsh/autoload.zsh
local file
.zi-get-mtime-into "${ZI[BIN_DIR]}/zi.zsh" "ZI[mtime]"
for file ( side install autoload ) {
  .zi-get-mtime-into "${ZI[BIN_DIR]}/lib/zsh/${file}.zsh" "ZI[mtime-${file}]"
}
